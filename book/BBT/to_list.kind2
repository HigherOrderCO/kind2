use BBT/{bin,tip}

to_list <K> <V> (map: (BBT K V)) : (List (Pair K V)) =
  match map {
    bin:
      use lft = (to_list map.lft)
      use rgt = (to_list map.rgt)
      use pair = (Pair/new map.key map.val)
      use list = (List/cons pair (List/concat lft rgt))
      list
    tip: List/nil
  }



//BBT.to_list
//: ∀(K: *) ∀(V: *) ∀(map: (BBT K V))
  //(List (Pair K V))
//= λK λV λmap
  //use P = λx (List (Pair K V))
  //use bin = λsize λkey λval λlft λrgt
    //use lft = (BBT.to_list K V lft)
    //use rgt = (BBT.to_list K V rgt)
    //use pair = (Pair.new K V key val)
    //use list = (List.cons
        //(Pair K V)
        //pair
        //(List.concat (Pair K V) lft rgt)
      //)
    //list
  //use tip = (List.nil (Pair K V))
  //(~map P bin tip)
