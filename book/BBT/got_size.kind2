use BBT/{bin,tip}

got_size <K> <V> (map: (BBT K V)) : (Pair U60 (BBT K V)) =
  match map {
    bin: (Pair/new map.size map)
    tip: (Pair/new 0 (tip K V))
  }



//BBT.got_size
//: ∀(K: *) ∀(V: *) ∀(map: (BBT K V))
  //(Pair U60 (BBT K V))
//= λK λV λmap
  //use P = λx (Pair U60 (BBT K V))
  //use bin = λsize λnext.key λnext.val λnext.lft λnext.rgt
    //use map = (BBT.bin K V size next.key next.val next.lft next.rgt)
    //(Pair.new U60 (BBT K V) size map)
  //use tip = (Pair.new U60 (BBT K V) 0 (BBT.tip K V))
  //(~map P bin tip)
